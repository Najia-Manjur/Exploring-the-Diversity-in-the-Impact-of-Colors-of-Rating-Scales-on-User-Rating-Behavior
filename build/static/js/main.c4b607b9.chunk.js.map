{"version":3,"sources":["Data/survey.js","components/utils.js","components/FormRow.js","Data/api.js","components/Demographics/Demographics.js","components/ConsentPage/ConsentPage.js","components/PersonalityPage/PersonalityPage.js","components/CommonRatePage/CommonRatePage.js","components/CommonRatingScalePage/CommonRatingScalePage.js","components/ExplainReviewPage/ExplainReviewPage.js","components/ReviewPage/ReviewPage.js","components/ReviewoverallPage/ReviewoverallPage.js","components/AsyncAwareContainer.js","components/AskEmailPage/AskEmailPage.js","components/EmailPage/EmailPage.js","components/RatePage/RatePage.js","components/EndPage/EndPage.js","ErrorPage.js","App.js","serviceWorker.js","index.js"],"names":["survey","text","split","map","item","index","toUpperCase","join","data","JSON","parse","stringify","limit","list","i","push","FormRow","Row","Col","xs","utils","this","props","name","FormControl","placeholder","type","onChange","Component","personality","selectedMovies","movies","movieids","length","ratingstyles","symbols","ratingStyles","navSequence","forEach","movieid","ratingstyle","shuffle","moviesList","key","Object","keys","k","a","async","axios","post","Demographics","state","age","country","gender","handleChange","event","target","value","setState","handleNext","history","replace","alert","error","message","componentUnmounted","loading","undefined","Container","id","checked","Button","style","onClick","React","ConsentPage","consent","className","href","PersonalityPage","talkative","dot","get","faultWithOthers","thoroughJob","depressed","original","reserved","helpful","careless","relaxed","curious","energy","quarrels","reliable","tense","deepThinker","enthusiasm","forgiving","disorganized","worried","activeImagination","quiet","trusting","lazy","upset","inventive","assertive","coldAloof","perseverence","moody","artistic","shy","kind","efficient","calm","routineWork","outgoing","rude","makePlans","nervous","reflective","fewArtInterest","cooperative","distracted","sophisticatedInArt","positiveEff1","positiveEff2","positiveEff3","positiveEff5","negativeEff1","negativeEff2","negativeEff3","negativeEff4","negativeEff6","otherEff1","otherEff2","otherEff3","otherEff5","pageNo","parseInt","match","params","isAll","1","2","3","4","5","6","console","log","document","body","scrollTop","documentElement","pop","radioRow","option","v","progressInstance","getNow","label","listLen","percent","ProgressBar","variant","now","striped","animated","pageDesc","page","border","cellPadding","float","CommonRatePage","changeCounter","mi","r","commonRate","handleChangeWatched","watched","filter","m","handleBack","window","confirm","ListGroup","overflow","horizontal","img","Item","src","alt","height","width","initialRating","stop","emptySymbol","empty","fullSymbol","full","bind","CommonRatingScalePage","mostAsked","choice","allRatingStyles","lg","readonly","ExplainReviewPage","reviewSequence","shift","ReviewPage","selected","getMovie","getSelected","movie","selectedScores","chosenScores","indexOf","chosenRatings","ReviewoverallPage","reviewOverall","AsyncAwareContainer","trim","Modal","show","centered","Body","Spinner","animation","createElement","children","AskEmailPage","handlExit","api","EmailPage","email","handleSubmit","RatePage","rating","handleNav","ln","curNum","rated","movie_number","sectionNo","curSec","rSec","curMovieNo","EndPage","ErrorPage","num","number","moreThan","required","integer","str","string","obj","o","object","shape","_personality","_movie","array","of","min","_navSeq","_reviewSeq","_ratedMovie","_reviewedMovie","_reviewOverall","sadHappy1Schema","commonSchema","rateSchema","sadHappy2Schema","reviewoverallSchema","sadHappy3Schema","reviewEachSchema","explainReviewSchema","emailSchema","schemas","RestrictedRoute","component","rest","render","transition","schema","path","to","pathname","from","location","validateSync","saveAs","nextRoute","err","App","onBeforeunload","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4b607b9.chunk.js","sourcesContent":["import movies from \"./movies.json\";\nimport symbols from \"../components/symbols.json\";\nimport utils from \"../components/utils\";\nimport shuffle from \"shuffle-array\";\n\nlet survey;\n\nexport default {\n  get: () => {\n    if (!survey) {\n      survey = {};\n      survey.personality = {};\n      \n        survey.selectedMovies = movies;\n        const movieids = utils.numberList(movies.length);\n        const ratingstyles = symbols.ratingStyles;\n\n        survey.navSequence = [];\n        movieids.forEach(movieid =>\n          ratingstyles.forEach(ratingstyle =>\n            survey.navSequence.push({\n              movieid,\n              ratingstyle\n            })\n          )\n        );\n        shuffle(survey.navSequence);\n    }\n\n    return survey;\n  },\n  loadMovies: (moviesList) => {\n    survey.selectedMovies = moviesList;\n    const movieids = utils.numberList(moviesList.length);\n    const ratingstyles = symbols.ratingStyles;\n\n    survey.navSequence = [];\n    movieids.forEach(movieid =>\n      ratingstyles.forEach(ratingstyle =>\n        survey.navSequence.push({\n          movieid,\n          ratingstyle\n        })\n      )\n    );\n    shuffle(survey.navSequence);\n  },\n  reset: () => {\n    survey = {};\n  },\n  retain: key => {\n  \tif (survey) {\n      Object.keys(survey).forEach(k => k !== key && delete survey[k]);\n    }\n  },\n  log: () => {\n    console.log(JSON.stringify(survey));\n  }\n}\n\nconst test1 = {\n    \"personality\":{\n        \"talkative\":0,\n        \"faultWithOthers\":1,\n        \"thoroughJob\":2,\n        \"depressed\":3\n    },\n    \"selectedMovies\":[\n        {\n            \"name\":\"Van Helsing\",\n            \"img\":\"https://prodigits.co.uk/thumbs/wallpapers/p2/fcelebs/15/9ab51d9c12256001.jpg\"\n        },\n        {\n            \"name\":\"Finding Nemo(2003)\",\n            \"img\":\"https://i.pinimg.com/originals/71/b2/37/71b2379b1010282d283c21f1079016fb.jpg\"\n        }\n    ],\n    \"navSequence\":[\n        {\n            \"movieid\":0,\n            \"ratingstyle\":\"color-emoji\"\n        },\n        {\n            \"movieid\":1,\n            \"ratingstyle\":\"circle\"\n        },\n        {\n            \"movieid\":0,\n            \"ratingstyle\":\"circle\"\n        },\n        {\n            \"movieid\":0,\n            \"ratingstyle\":\"color-circle\"\n        },\n        {\n            \"movieid\":0,\n            \"ratingstyle\":\"color-star\"\n        },\n        {\n            \"movieid\":1,\n            \"ratingstyle\":\"emoji\"\n        },\n        {\n            \"movieid\":0,\n            \"ratingstyle\":\"emoji\"\n        },\n        {\n            \"movieid\":1,\n            \"ratingstyle\":\"color-star\"\n        },\n        {\n            \"movieid\":1,\n            \"ratingstyle\":\"color-emoji\"\n        },\n        {\n            \"movieid\":1,\n            \"ratingstyle\":\"color-circle\"\n        }\n    ]\n};\n\nconst test2 = {\n    \"personality\":{\n        \"talkative\":0,\n        \"faultWithOthers\":1,\n        \"thoroughJob\":2,\n        \"depressed\":3\n    },\n    \"selectedMovies\":[\n        {\n            \"name\":\"Van Helsing\",\n            \"img\":\"https://prodigits.co.uk/thumbs/wallpapers/p2/fcelebs/15/9ab51d9c12256001.jpg\",\n            \"commonRate\":3,\n            \"emoji\":5,\n            \"color-star\":2,\n            \"color-circle\":4,\n            \"circle\":5,\n            \"color-emoji\":3\n        },\n        {\n            \"name\":\"Finding Nemo(2003)\",\n            \"img\":\"https://i.pinimg.com/originals/71/b2/37/71b2379b1010282d283c21f1079016fb.jpg\",\n            \"commonRate\":4,\n            \"color-circle\":2,\n            \"color-emoji\":4,\n            \"color-star\":3,\n            \"emoji\":3,\n            \"circle\":3\n        }\n    ],\n    \"navSequence\":[\n\n    ],\n    \"reviewOverall\":\"color-star\",\n    \"reviewSequence\":[\n        0,\n        1\n    ]\n}\n\n// survey = test1;","export default {\n  propercase: text => text.split(\"\").map((item,index) => index === 0 ? item.toUpperCase() : item).join(\"\"),\n  clone: data => JSON.parse(JSON.stringify(data)),\n  numberList: limit => {\n    const list = [];\n  \tfor (var i = 0; i < limit; i++) {\n      list.push(i);\n    }\n    return list;\n  }\n};\n\n\n\n// {\n\t// \t\"name\": \"Gone Girl(2014)\",\n\t// \t\"img\": \"https://upload.wikimedia.org/wikipedia/en/0/05/Gone_Girl_Poster.jpg\"\n\t// },\n\t// {\n\t// \t\"name\": \"Deadpool(2016)\",\n\t// \t\"img\": \"https://www.dvd-trailers.gr/dvd/deadpool_2016.jpg\"\n\t// },\n\t// {\n\t// \t\"name\": \"Aladdin (2019)\",\n\t// \t\"img\": \"https://upload.wikimedia.org/wikipedia/en/9/9a/Aladdin_%28Official_2019_Film_Poster%29.png\"\n\t// },\n\n\t// {\n\t// \t\"name\": \"Captain Marvel (2019)\",\n\t// \t\"img\": \"https://upload.wikimedia.org/wikipedia/en/8/85/Captain_Marvel_poster.jpg\"\n\t// },\n\n\t// {\n\t// \t\"name\": \"Bird Box(2018)\",\n\t// \t\"img\": \"https://upload.wikimedia.org/wikipedia/en/b/bd/Bird_Box_%28film%29.png\"\n\t// },\n\n\n\t// {\n\t// \t\"name\": \"The Emoji Movie(2017)\",\n\t// \t\"img\": \"https://upload.wikimedia.org/wikipedia/en/6/63/The_Emoji_Movie_film_poster.jpg\"\n\t// },\n\n\t// {\n\t// \t\"name\": \"Clash of The Titans(2010)\",\n\t// \t\"img\": \"https://1.bp.blogspot.com/_Z3BUX71Sca8/S7avZb1rQLI/AAAAAAAAJv4/ap3fGeACzYw/s400/clashofthetitans-11.jpg\"\n\t// },\n\n\t// {\n\t// \t\"name\": \"Fifty Shades of Grey(2015)\",\n\t// \t\"img\": \"https://upload.wikimedia.org/wikipedia/en/7/73/Fifty_Shades_of_Grey_poster.jpg\"\n\t// },\n\n\t// {\n\t// \t\"name\": \"Twilight(2008)\",\n\t// \t\"img\": \"https://upload.wikimedia.org/wikipedia/en/b/b6/Twilight_%282008_film%29_poster.jpg\"\n\t// }\n","import React, { Component } from \"react\";\nimport utils from './utils';\nimport { Col, FormControl, Row} from 'react-bootstrap';\n\nclass FormRow extends Component {\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col xs=\"3\">{utils.propercase(this.props.name)}</Col>\n          <Col>\n            <FormControl\n              placeholder={this.props.placeholder ? this.props.placeholder : \"\"}\n              type={this.props.type ? this.props.type : 'text'}\n              name={this.props.name}\n              onChange={this.props.onChange}/>\n          </Col>\n        </Row>\n        <br/>\n      </div>\n    );\n  }\n}\n\nexport default FormRow;","import axios from \"axios\";\nimport survey from \"./survey\"\n\nconst API = \"https://movie-survey.herokuapp.com\";\n// const API = \"localhost:5000\";\n\nexport default {\n  submit: async () => {\n    await axios.post(`${API}/submit`, survey.get());\n  }\n};","import React from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport FormRow from \"../FormRow\";\r\nimport survey from \"../../Data/survey\";\r\nimport api from \"../../Data/api\";\r\n\r\nclass Demographics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      age: \"\",\r\n      country: \"\",\r\n      gender: null\r\n    };\r\n\r\n    this.handleChange = event => {\r\n      const { name, value } = event.target;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n\r\n    this.handleNext = async () => {\r\n      try {\r\n\r\n        let {age, country, gender} = this.state;\r\n\r\n        if (!age || !country || !gender)\r\n          alert(\"Please fill up all the fields.\");\r\n        else {\r\n          survey.get().personality.age = age;\r\n          survey.get().personality.country = country;\r\n          survey.get().personality.gender = gender;\r\n\r\n          var pageNo = 1;\r\n          this.props.history.replace(`/info/${pageNo}`);\r\n        }\r\n      } catch (error) {\r\n        alert(error.message);\r\n      } finally {\r\n        if (!this.componentUnmounted)\r\n          this.setState({loading: undefined});\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.componentUnmounted = true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h6> Please provide the following information: </h6>\r\n          <br/>\r\n          \r\n          <p>Age:</p>\r\n          <input type=\"number\" id=\"age\" name=\"age\" value={this.state.age} onChange={this.handleChange} />\r\n          <br/>\r\n          <pre></pre><pre></pre>\r\n          <p>Please select your gender:</p>\r\n          <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\" checked={this.state.gender === \"male\"} onChange={this.handleChange} />\r\n          <label>Male</label>\r\n          <br/>\r\n          <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\" checked={this.state.gender === \"female\"} onChange={this.handleChange} />\r\n          <label>Female</label>\r\n          <br/>\r\n          <input type=\"radio\" id=\"other\" name=\"gender\" value=\"other\" checked={this.state.gender === \"other\"} onChange={this.handleChange} />\r\n          <label>Other</label>\r\n          <pre></pre><pre></pre>\r\n          \r\n          <p>Home Country: (The country where you were born and usually raised in, regardless of the present country of your residence and citizenship.)</p>\r\n          <input type=\"text\" id=\"country\" name=\"country\" value={this.state.country} onChange={this.handleChange} />\r\n          <br/>\r\n          \r\n          \r\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Next</Button>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Demographics;","import React from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\n\r\nclass ConsentPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      consent: false\r\n    };\r\n\r\n    this.handleChange = event => {\r\n      const { name, value } = event.target;\r\n      this.setState({\r\n        name: value\r\n      });\r\n    }\r\n\r\n    this.handleNext = () => {\r\n      // if (this.state.consent)\r\n      this.props.history.replace(\"/demographics\"); \r\n      // else\r\n      //   alert(\"Please agree :P\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // debugger;\r\n    \r\n    return (\r\n      <div className=\"vertical-center\">\r\n        <Container>\r\n          <div>\r\n            <center><h4>Consent Form</h4></center>\r\n            \r\n            <h5>Researchers</h5>\r\n            <ul>\r\n              <li>Najia Manjur, Graduate Student, Department of Computer Science, University of Saskatchewan, email: <a href=\"mailto: nam907@mail.usask.ca\">nam907@mail.usask.ca</a></li>\r\n              <li>Maliha Mahbub, Graduate Student, Department of Computer Science, University of Saskatchewan, email: <a href=\"mailto: mam789@mail.usask.ca\">mam789@mail.usask.ca</a></li>\r\n            </ul>\r\n            <h5>Supervisor</h5>\r\n            \r\n            <p>Julita Vassileva, Department of Computer Science, University of Saskatchewan, email: <a href=\"mailto: jiv@cs.usask.ca\"> jiv@cs.usask.ca</a></p>\r\n            \r\n            <h5>Purpose and Objective of the Study</h5>\r\n            <p>The goal of this research is to find out if users’ demographics, personality, mood and the design of\r\n            rating scales have an impact on their rating behavior. The study may contribute to the general\r\n            research area of Human Computer Interaction (HCI), Recommender Systems and\r\n            Personalization. We have designed a survey that will take approximately 20 minutes and we\r\n            invite you to respond to it by using our system interface. The questionnaire will be presented to\r\n            you after giving your consent to participate in the study.</p>\r\n            <h5>Procedure</h5>\r\n            <p>An online experiment platform is implemented to conduct the user study. The study will\r\n            start with a survey to collect the participants’ demographic data including gender, age and\r\n            home country. In the study, the participants will respond\r\n            to the questionnaire from the Big Five Inventory (BFI, 44 items) and PANAS X in order to assess their\r\n            personality traits and mood on a 5-point Likert scale. Then they will be asked to rate 10 movies using different\r\n            rating scale interfaces. The study will conclude with a survey to collect feedback on the design of the rating scales.</p>\r\n            <h5>Confidentiality</h5>\r\n            <p>\r\n              To protect the anonymity and confidentiality of a participant, all the collected information\r\n              will be stored against a unique, system-generated ID. Thus, the identity of the participant will\r\n              remain unknown. Only the researchers will have access to the ID and the information collected in the study.\r\n            </p>\r\n            <p></p>\r\n            <h5>Potential Risk</h5>\r\n            <p>\r\n              There are no known or anticipated risks to you by participating in this study.\r\n            </p>\r\n            <p></p>\r\n            <h5>Right to Withdraw </h5>\r\n            <p>\r\n              Your participation is voluntary and you may decide not to participate in this study. After \r\n              submitting 'I Agree' button, we won’t be able to identify your data and therefore, withdrawal \r\n              is not possible.\r\n            </p>\r\n            <h5>Follow Up</h5>\r\n            <p>To obtain summary of the results from the study, please contact the researchers.</p>\r\n            <h5>Questions or Concerns</h5>\r\n            <ul>\r\n              <li>Contact the researcher(s) using the information at the top of this page.</li>\r\n              <li>This research project has been approved on ethical grounds by the University of Saskatchewan Research Ethics Board. \r\n              Any questions regarding your rights as a participant may be addressed to that committee through the Research Ethics Office \r\n              <a href=\"mailto: ethics.office@usask.ca\"> ethics.office@usask.ca</a> (306) 966-2975. Out of town participants may call toll \r\n              free (888)966-2975.</li>\r\n            </ul> \r\n            <p>By completing and submitting the questionnaire, YOUR FREE AND INFORMED CONSENT IS IMPLIED and indicates that \r\n            you understand the above conditions of participation in this study.</p>\r\n\r\n            <p>By pressing the 'I Agree' button below indicates that you have read and understood the\r\n            descriptions provided. You have had an opportunity to ask questions and your questions have been answered.\r\n            You consent to participate in this survey. \r\n            </p>\r\n           \r\n          </div>\r\n          \r\n          <div>\r\n            <Button style={{\"float\":\"right\", \"background\": \"#28a745\", \"border\": \"0\"}} onClick={this.handleNext}>I Agree</Button>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConsentPage;\r\n\r\n\r\n","import React from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport utils from \"../utils\";\nimport survey from \"../../Data/survey\";\nimport dot from \"dot-prop\";\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass PersonalityPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      talkative: dot.get(survey.get(), \"personality.talkative\", 0),\n      faultWithOthers: dot.get(survey.get(), \"personality.faultWithOthers\", 0),\n      thoroughJob: dot.get(survey.get(), \"personality.thoroughJob\", 0),\n      depressed: dot.get(survey.get(), \"personality.depressed\", 0),\n      original: dot.get(survey.get(), \"personality.original\", 0),\n      reserved: dot.get(survey.get(), \"personality.reserved\", 0),\n      helpful: dot.get(survey.get(), \"personality.helpful\", 0),\n      careless: dot.get(survey.get(), \"personality.careless\", 0),\n      relaxed: dot.get(survey.get(), \"personality.relaxed\", 0),\n      curious: dot.get(survey.get(), \"personality.curious\", 0),\n      energy: dot.get(survey.get(), \"personality.energy\", 0),\n      quarrels: dot.get(survey.get(), \"personality.quarrels\", 0),\n      reliable: dot.get(survey.get(), \"personality.reliable\", 0),\n      tense: dot.get(survey.get(), \"personality.tense\", 0),\n      deepThinker: dot.get(survey.get(), \"personality.deepThinker\", 0),\n      enthusiasm: dot.get(survey.get(), \"personality.enthusiasm\", 0),\n      forgiving: dot.get(survey.get(), \"personality.forgiving\", 0),\n      disorganized: dot.get(survey.get(), \"personality.disorganized\", 0),\n      worried: dot.get(survey.get(), \"personality.worried\", 0),\n      activeImagination: dot.get(\n        survey.get(),\n        \"personality.activeImagination\",\n        0\n      ),\n      quiet: dot.get(survey.get(), \"personality.quiet\", 0),\n      trusting: dot.get(survey.get(), \"personality.trusting\", 0),\n      lazy: dot.get(survey.get(), \"personality.lazy\", 0),\n      upset: dot.get(survey.get(), \"personality.upset\", 0),\n      inventive: dot.get(survey.get(), \"personality.inventive\", 0),\n      assertive: dot.get(survey.get(), \"personality.assertive\", 0),\n      coldAloof: dot.get(survey.get(), \"personality.coldAloof\", 0),\n      perseverence: dot.get(survey.get(), \"personality.perseverence\", 0),\n      moody: dot.get(survey.get(), \"personality.moody\", 0),\n      artistic: dot.get(survey.get(), \"personality.artistic\", 0),\n      shy: dot.get(survey.get(), \"personality.shy\", 0),\n      kind: dot.get(survey.get(), \"personality.kind\", 0),\n      efficient: dot.get(survey.get(), \"personality.efficient\", 0),\n      calm: dot.get(survey.get(), \"personality.calm\", 0),\n      routineWork: dot.get(survey.get(), \"personality.routineWork\", 0),\n      outgoing: dot.get(survey.get(), \"personality.outgoing\", 0),\n      rude: dot.get(survey.get(), \"personality.rude\", 0),\n      makePlans: dot.get(survey.get(), \"personality.makePlans\", 0),\n      nervous: dot.get(survey.get(), \"personality.nervous\", 0),\n      reflective: dot.get(survey.get(), \"personality.reflective\", 0),\n      fewArtInterest: dot.get(survey.get(), \"personality.fewArtInterest\", 0),\n      cooperative: dot.get(survey.get(), \"personality.cooperative\", 0),\n      distracted: dot.get(survey.get(), \"personality.distracted\", 0),\n      sophisticatedInArt: dot.get(\n        survey.get(),\n        \"personality.sophisticatedInArt\",\n        0\n      ),\n      positiveEff1: dot.get(survey.get(), \"personality.positiveEff1\", 0),\n      positiveEff2: dot.get(survey.get(), \"personality.positiveEff2\", 0),\n      positiveEff3: dot.get(survey.get(), \"personality.positiveEff3\", 0),\n      positiveEff5: dot.get(survey.get(), \"personality.positiveEff5\", 0),\n      negativeEff1: dot.get(survey.get(), \"personality.negativeEff1\", 0),\n      negativeEff2: dot.get(survey.get(), \"personality.negativeEff2\", 0),\n      negativeEff3: dot.get(survey.get(), \"personality.negativeEff3\", 0),\n      negativeEff4: dot.get(survey.get(), \"personality.negativeEff4\", 0),\n      negativeEff6: dot.get(survey.get(), \"personality.negativeEff6\", 0),\n      otherEff1: dot.get(survey.get(), \"personality.otherEff1\", 0),\n      otherEff2: dot.get(survey.get(), \"personality.otherEff2\", 0),\n      otherEff3: dot.get(survey.get(), \"personality.otherEff3\", 0),\n      otherEff5: dot.get(survey.get(), \"personality.otherEff5\", 0),\n      age: survey.get().personality.age,\n      gender: survey.get().personality.gender,\n      country: survey.get().personality.country,\n\n      pageNo: parseInt(this.props.match.params.pageNo)\n    };\n\n    this.handleChange = (event) => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: parseInt(value),\n      });\n    };\n\n    this.handleNext = () => {\n      let pageNo = this.state.pageNo;\n\n      let pageItems = {\n        1: [\n          \"talkative\", \n          \"faultWithOthers\", \n          \"thoroughJob\", \n          \"depressed\", \n          ],\n        2: [\n          \"positiveEff1\",\n          \"positiveEff2\",\n          \"positiveEff3\",\n          \"positiveEff5\",\n          \"negativeEff1\",\n          \"negativeEff2\",\n          \"negativeEff3\",\n          \"negativeEff4\",\n          \"negativeEff6\",\n          \"otherEff1\",\n          \"otherEff2\",\n          \"otherEff3\",\n          \"otherEff5\",\n        ],\n        3: [\n          \"original\",\n          \"reserved\",\n          \"helpful\",\n          \"careless\",\n          \"relaxed\",\n          \"curious\",\n          \"energy\",\n          \"quarrels\",\n          \"reliable\",\n          \"tense\",\n        ],\n        4: [\n          \"deepThinker\",\n          \"enthusiasm\",\n          \"forgiving\",\n          \"disorganized\",\n          \"worried\",\n          \"activeImagination\",\n          \"quiet\",\n          \"trusting\",\n          \"lazy\",\n          \"upset\",\n        ],\n        5: [\n          \"inventive\",\n          \"assertive\",\n          \"coldAloof\",\n          \"perseverence\",\n          \"moody\",\n          \"artistic\",\n          \"shy\",\n          \"kind\",\n          \"efficient\",\n          \"calm\",\n        ],\n        6: [\n          \"routineWork\",\n          \"outgoing\",\n          \"rude\",\n          \"makePlans\",\n          \"nervous\",\n          \"reflective\",\n          \"fewArtInterest\",\n          \"cooperative\",\n          \"distracted\",\n          \"sophisticatedInArt\",\n        ],\n      };\n\n      let key;\n      let isAll = true;\n      for (key of pageItems[pageNo]) {\n        if (this.state[key] == 0) {\n          isAll = false;\n          console.log(\"Did not find \" + key);\n        }\n      }\n\n      if (!isAll) alert(\"Please answer all questions.\");\n      else {\n        survey.get().personality = utils.clone(this.state);\n\n        if (pageNo == 1) {\n          document.body.scrollTop = document.documentElement.scrollTop = 0;\n          this.setState({\n            pageNo: pageNo + 1,\n          });\n        } else if (pageNo == 2) {\n          this.props.history.replace(\"/common\");\n        } else if (pageNo == 6) {\n          return this.props.history.replace(`/reviewoverall`);\n        } else {\n          const { movieid, ratingstyle } = survey.get().navSequence.pop();\n          return this.props.history.replace(`/rate/${movieid}/${ratingstyle}`);\n        }\n      }\n    };\n  }\n\n  render() {\n\n    let pageNo = this.state.pageNo;\n    console.log(pageNo);\n    console.log(this.props);\n\n    // debugger;\n    const radioRow = (option) => {\n      return [1, 2, 3, 4, 5].map((v, i) => (\n        <td key={i}>\n          <input\n            type=\"radio\"\n            name={option}\n            value={v}\n            checked={this.state[option] === v}\n            onChange={this.handleChange}\n          />\n        </td>\n      ));\n    };\n\n    var progressInstance = \"\";\n\n    if(pageNo > 2) {\n      const getNow = (pageNo, label) => {\n        if(pageNo < this.state.pageNo)\n          return label?'100%':100;\n        else if(pageNo === this.state.pageNo) {\n          let listLen = survey.get().selectedMovies.length;\n          let percent = 100 - parseInt(100/(listLen+1));\n          return label?`${percent}%`:percent;\n        }\n        else\n          return label?'':0;\n      };\n\n      progressInstance = (\n        <div className={\"bottomPad\"}>\n          <div className={\"progressBarContainer\"}>\n            <ProgressBar variant=\"info\" now={100} label={`Section 1`} />\n            <ProgressBar variant=\"info\" now={100} label={`Section 2`} />\n            <ProgressBar variant=\"info\" now={100} label={`Section 3`} />\n            <ProgressBar variant=\"info\" now={100} label={`Section 4`} />\n            <ProgressBar variant=\"info\" now={100} label={`Section 5`} />\n          </div>\n          <div className={\"progressBarContainer\"}>\n            <ProgressBar striped animated variant=\"success\" now={getNow(3, false)} label={getNow(3, true)} />\n            <ProgressBar striped animated variant=\"success\" now={getNow(4, false)} label={getNow(4, true)} />\n            <ProgressBar striped animated variant=\"success\" now={getNow(5, false)} label={getNow(5, true)} />\n            <ProgressBar striped animated variant=\"success\" now={getNow(6, false)} label={getNow(6, true)} />\n            <ProgressBar striped animated variant=\"success\" now={getNow(7, false)} label={getNow(7, true)} />\n          </div>\n        </div>\n      );\n    }\n\n\n    let pageDesc = (\n      <div>\n        <p>\n          {\" \"}\n          Here are a number of characteristics that may or may not apply to you.\n          For example, do you agree that you are someone who likes to spend time\n          with others? Please select a box next to each statement to indicate\n          the extent to which you agree or disagree with that statement.{\" \"}\n        </p>\n        <br />\n        <p> I see myself as someone who… </p>\n      </div>\n    );\n\n    let page = (\n      <tbody>\n        <tr>\n          <th></th>\n          <th>Disagree Strongly</th>\n          <th>Disagree a little</th>\n          <th>Neither agree nor disagree</th>\n          <th>Agree a little</th>\n          <th>Agree Strongly</th>\n        </tr>\n        <tr>\n          <td>Is talkative</td>\n          {radioRow(\"talkative\")}\n        </tr>\n        <tr>\n          <td>Tends to find fault with others</td>\n          {radioRow(\"faultWithOthers\")}\n        </tr>\n        <tr>\n          <td>Does a thorough job</td>\n          {radioRow(\"thoroughJob\")}\n        </tr>\n        <tr>\n          <td>Is depressed, blue</td>\n          {radioRow(\"depressed\")}\n        </tr>\n\n      </tbody>\n    );\n\n    if (this.state.pageNo == 2) {\n      pageDesc = (\n        <div>\n          <p>\n            {\" \"}\n            Here are a number of words and phrases that describe different\n            feelings and emotions. Read each item and then mark the appropriate\n            answer in the space next to that word. Indicate to what extent you\n            have felt this way today. Use the following scale to record your\n            answers:\n          </p>\n          <br />\n        </div>\n      );\n\n      page = (\n        <tbody>\n          <tr>\n            <th></th>\n            <th>Very slightly or not at all</th>\n            <th>A little</th>\n            <th>Moderately</th>\n            <th>Quite a bit</th>\n            <th>Extremely</th>\n          </tr>\n          <tr>\n            <td>Happy</td>\n            {radioRow(\"positiveEff1\")}\n          </tr>\n          <tr>\n            <td>Excited</td>\n            {radioRow(\"positiveEff2\")}\n          </tr>\n          <tr>\n            <td>Interested</td>\n            {radioRow(\"positiveEff3\")}\n          </tr>\n          <tr>\n            <td>Confident</td>\n            {radioRow(\"positiveEff5\")}\n          </tr>\n          <tr>\n            <td>Sad</td>\n            {radioRow(\"negativeEff1\")}\n          </tr>\n          <tr>\n            <td>Nervous</td>\n            {radioRow(\"negativeEff2\")}\n          </tr>\n          <tr>\n            <td>Angry</td>\n            {radioRow(\"negativeEff3\")}\n          </tr>\n          <tr>\n            <td>Afraid</td>\n            {radioRow(\"negativeEff4\")}\n          </tr>\n          <tr>\n            <td>Dissatisfied with self</td>\n            {radioRow(\"negativeEff6\")}\n          </tr>\n          <tr>\n            <td>Sleepy</td>\n            {radioRow(\"otherEff1\")}\n          </tr>\n          <tr>\n            <td>Tired</td>\n            {radioRow(\"otherEff2\")}\n          </tr>\n          <tr>\n            <td>Relaxed</td>\n            {radioRow(\"otherEff3\")}\n          </tr>\n          <tr>\n            <td>Calm</td>\n            {radioRow(\"otherEff5\")}\n          </tr>\n        </tbody>\n      );\n    }\n\n    if (this.state.pageNo == 3)\n      page = (\n        <tbody>\n          <tr>\n            <th></th>\n            <th>Disagree Strongly</th>\n            <th>Disagree a little</th>\n            <th>Neither agree nor disagree</th>\n            <th>Agree a little</th>\n            <th>Agree Strongly</th>\n          </tr>\n\n        <tr>\n          <td>Is original, comes up with new ideas</td>\n          {radioRow(\"original\")}\n        </tr>\n        <tr>\n          <td>Is reserved</td>\n          {radioRow(\"reserved\")}\n        </tr>\n        <tr>\n          <td>Is helpful and unselfish with others</td>\n          {radioRow(\"helpful\")}\n        </tr>\n        <tr>\n          <td>Can be somewhat careless</td>\n          {radioRow(\"careless\")}\n        </tr>\n        <tr>\n          <td>Is relaxed, handles stress well</td>\n          {radioRow(\"relaxed\")}\n        </tr>\n        <tr>\n          <td>Is curious about many different things</td>\n          {radioRow(\"curious\")}\n        </tr>\n          <tr>\n            <td>Is full of energy</td>\n            {radioRow(\"energy\")}\n          </tr>\n          <tr>\n            <td>Starts quarrels with others</td>\n            {radioRow(\"quarrels\")}\n          </tr>\n          <tr>\n            <td>Is a reliable worker</td>\n            {radioRow(\"reliable\")}\n          </tr>\n          <tr>\n            <td>Can be tense</td>\n            {radioRow(\"tense\")}\n          </tr>\n\n        </tbody>\n      );\n\n    if (this.state.pageNo == 4)\n      page = (\n        <tbody>\n          <tr>\n            <th></th>\n            <th>Disagree Strongly</th>\n            <th>Disagree a little</th>\n            <th>Neither agree nor disagree</th>\n            <th>Agree a little</th>\n            <th>Agree Strongly</th>\n          </tr> \n\n          <tr>\n            <td>Is ingenious, a deep thinker</td>\n            {radioRow(\"deepThinker\")}\n          </tr>\n          <tr>\n            <td>Generates a lot of enthusiasm</td>\n            {radioRow(\"enthusiasm\")}\n          </tr>\n          <tr>\n            <td>Has a forgiving nature</td>\n            {radioRow(\"forgiving\")}\n          </tr>\n          <tr>\n            <td>Tends to be disorganized</td>\n            {radioRow(\"disorganized\")}\n          </tr>\n          <tr>\n            <td>Worries a lot</td>\n            {radioRow(\"worried\")}\n          </tr>\n          <tr>\n            <td>Has an active imagination</td>\n            {radioRow(\"activeImagination\")}\n          </tr>\n          <tr>\n            <td>Tends to be quiet</td>\n            {radioRow(\"quiet\")}\n          </tr>\n          <tr>\n            <td>Is generally trusting</td>\n            {radioRow(\"trusting\")}\n          </tr>\n          <tr>\n            <td>Tends to be lazy</td>\n            {radioRow(\"lazy\")}\n          </tr>\n          <tr>\n            <td>Is emotionally stable, not easily upset</td>\n            {radioRow(\"upset\")}\n          </tr>\n          \n        </tbody>\n      );\n\n    if (this.state.pageNo == 5)\n      page = (\n        <tbody>\n          <tr>\n            <th></th>\n            <th>Disagree Strongly</th>\n            <th>Disagree a little</th>\n            <th>Neither agree nor disagree</th>\n            <th>Agree a little</th>\n            <th>Agree Strongly</th>\n          </tr>\n\n          <tr>\n            <td>Is inventive</td>\n            {radioRow(\"inventive\")}\n          </tr>\n          <tr>\n            <td>Has an assertive personality</td>\n            {radioRow(\"assertive\")}\n          </tr>\n          <tr>\n            <td>Can be cold and aloof</td>\n            {radioRow(\"coldAloof\")}\n          </tr>\n          <tr>\n            <td>Perseveres until the task is finished</td>\n            {radioRow(\"perseverence\")}\n          </tr>\n          <tr>\n            <td>Can be moody</td>\n            {radioRow(\"moody\")}\n          </tr>\n          <tr>\n            <td>Values artistic, aesthetic experiences</td>\n            {radioRow(\"artistic\")}\n          </tr> \n          <tr>\n            <td>Is sometimes shy, inhibited</td>\n            {radioRow(\"shy\")}\n          </tr>\n          <tr>\n            <td>Is considerate and kind to almost everyone</td>\n            {radioRow(\"kind\")}\n          </tr>\n          <tr>\n            <td>Does things efficiently</td>\n            {radioRow(\"efficient\")}\n          </tr>\n          <tr>\n            <td>Remains calm in tense situations</td>\n            {radioRow(\"calm\")}\n          </tr>\n          \n        </tbody>\n      );\n\n    if (this.state.pageNo == 6)\n      page = (\n        <tbody>\n          <tr>\n            <th></th>\n            <th>Disagree Strongly</th>\n            <th>Disagree a little</th>\n            <th>Neither agree nor disagree</th>\n            <th>Agree a little</th>\n            <th>Agree Strongly</th>\n          </tr>\n\n          <tr>\n            <td>Prefers work that is routine</td>\n            {radioRow(\"routineWork\")}\n          </tr>\n          <tr>\n            <td>Is outgoing, sociable</td>\n            {radioRow(\"outgoing\")}\n          </tr>\n          <tr>\n            <td>Is sometimes rude to others</td>\n            {radioRow(\"rude\")}\n          </tr>\n          <tr>\n            <td>Makes plans and follows through with them</td>\n            {radioRow(\"makePlans\")}\n          </tr>\n          <tr>\n            <td>Gets nervous easily</td>\n            {radioRow(\"nervous\")}\n          </tr>\n          <tr>\n            <td>Likes to reflect, play with ideas</td>\n            {radioRow(\"reflective\")}\n          </tr>\n          <tr>\n            <td>Has few artistic interests</td>\n            {radioRow(\"fewArtInterest\")}\n          </tr>\n          <tr>\n            <td>Likes to cooperate with others</td>\n            {radioRow(\"cooperative\")}\n          </tr>\n          <tr>\n            <td>Is easily distracted</td>\n            {radioRow(\"distracted\")}\n          </tr>\n          <tr>\n            <td>Is sophisticated in art, music, or literature</td>\n            {radioRow(\"sophisticatedInArt\")}\n          </tr>\n        </tbody>\n      );\n\n    return (\n      <div className=\"vertical-center\">\n        <Container>\n          {progressInstance}\n          {pageDesc}\n          <table border=\"0\" cellPadding=\"10\">\n            {page}\n          </table>\n          <Button style={{ float: \"right\" }} onClick={this.handleNext}>\n            Next\n          </Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default PersonalityPage;","import React from \"react\";\nimport { Button, Container, ListGroup } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\nimport Rating from \"react-rating\";\nimport \"../survey.css\";\nimport symbols from \"../symbols.json\";\n\nclass CommonRatePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      changeCounter: 0 // just using to refresh the state\n      // watched: null\n    };\n\n    this.handleChange = (mi) => r => {\n      survey.get().selectedMovies[mi].commonRate = r;\n    }\n\n    this.handleChangeWatched = (mi, event) => {\n      const { name, value } = event.target;\n      survey.get().selectedMovies[mi].watched = value;\n      // console.log(survey.get().selectedMovies[mi]);\n      this.setState({\n        changeCounter: this.changeCounter + 1\n      });\n    }\n\n    this.handleNext = () => {\n      // if (survey.get().selectedMovies.filter(m => typeof m.commonRate !== 'number' || typeof m.watched !== 'string').length > 0) {\n      //   return alert(\"Please rate all the movies\");\n      // }\n\n      let selectedMovies = survey.get().selectedMovies.filter(m => m.watched == \"yes\")\n      survey.loadMovies(selectedMovies);\n\n      const { movieid, ratingstyle} = survey.get().navSequence.pop();\n      this.props.history.replace(`/rate/${movieid}/${ratingstyle}`);\n    }\n\n    this.handleBack = () => {\n      if (window.confirm('Are you sure? All selected products will be cleared')) {\n        survey.retain(\"personality\");\n        this.props.history.replace(`/`);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <h6>A list of products is shown here.You can see all the products in the list by moving the horizontal bar.</h6> \n          <ul>\n            <li>For the prodcuts you have used before, select the option \"Yes\" and rate the product based on how much you like it or not.</li>\n            <li>For the prodcuts you have not had an experience with, select the option \"No\" and skip rating.</li>\n          </ul> \n          <ListGroup \n            style={{\n              overflow: \"auto\"\n            }}\n            horizontal\n          >\n            {\n              survey.get()\n                .selectedMovies\n                .map((m, i) => {\n                  const {name, img, commonRate, watched} = m;\n                  // console.log(commonRate);\n                  // console.log(\"watched \" + watched);\n                  return <ListGroup.Item key={i}>\n                    <img src={img} alt=\"Poster\" height=\"240\" width=\"240\" /> <br/>\n                    <h6> {name} </h6>\n                      <Rating\n                        initialRating={commonRate}\n                        stop={5}\n                        emptySymbol={symbols.commonRate.empty}\n                        fullSymbol={symbols.commonRate.full}\n                        onChange={this.handleChange(i)}\n                      />\n                      <p></p>\n                      <p>Have you used this product?</p>\n                      <input type=\"radio\" id=\"yes\" name={\"watched-\" + name} value=\"yes\" checked={watched === \"yes\"} onChange={this.handleChangeWatched.bind(this, i)} />\n                      <label>Yes</label>\n                      <br/>\n                      <input type=\"radio\" id=\"no\" name={\"watched-\" + name} value=\"no\" checked={watched === \"no\"} onChange={this.handleChangeWatched.bind(this, i)} />\n                      <label>No</label>\n                      <br/>\n                  </ListGroup.Item> \n                })\n            }\n          </ListGroup>\n          <br/>\n          <p>From the next page onwards, you will be asked to rate the selected products again. You do not have to\n          remember the exact rating you gave here for every product, just go with the flow and rate what you feel like!</p>\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Next</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default CommonRatePage;","import React from \"react\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport survey from \"../../Data/survey\";\r\nimport Rating from \"react-rating\";\r\nimport \"../survey.css\";\r\nimport symbols from \"../symbols.json\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\nclass CommonRatingScalePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      \"choice\": null\r\n    };\r\n\r\n    this.handleChange = event => {\r\n      const { name, value } = event.target;\r\n      this.setState({\r\n        [name]: parseInt(value)\r\n      });\r\n    }\r\n\r\n    this.handleNext = () => {\r\n      survey.get().mostAsked = this.state.choice;\r\n      this.props.history.replace(`/explainreview`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let listLen = survey.get().selectedMovies.length;\r\n    let now = parseInt(100/(listLen + 3));\r\n\r\n    const progressInstance = (\r\n      <div className={\"bottomPad\"}>\r\n        <div className={\"progressBarContainer\"}>\r\n          <ProgressBar variant=\"info\" now={100} label={`Section 1`} />\r\n          <ProgressBar variant=\"info\" now={100} label={`Section 2`} />\r\n          <ProgressBar variant=\"info\" now={100} label={`Section 3`} />\r\n          <ProgressBar variant=\"info\" now={100} label={`Section 4`} />\r\n          <ProgressBar variant=\"info\" now={100} label={`Section 5`} />\r\n        </div>\r\n        <div className={\"progressBarContainer\"}>\r\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\r\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\r\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\r\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\r\n          <ProgressBar striped animated variant=\"success\" now={now} label={`${now}%`} />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {progressInstance}\r\n          <h6>Which of the following rating scale do you usually see on the internet?</h6>\r\n          {\r\n            symbols.allRatingStyles.map((r, i) =>\r\n              <div key={i}>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Col xs lg=\"1\">\r\n                    <input type=\"radio\" name=\"choice\" value={i} checked={this.state.choice === i} onChange={this.handleChange} />\r\n                  </Col>\r\n                  <Col xs lg=\"2\">\r\n                    {\r\n                      <Rating\r\n                        style={{width: \"100%\"}}\r\n                        readonly\r\n                        stop={5}\r\n                        initialRating={5}\r\n                        fullSymbol={symbols[r].full}\r\n                      />\r\n                    }\r\n                  </Col>\r\n                </Row>\r\n                <br/>\r\n              </div>\r\n            )\r\n          }\r\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Submit</Button>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonRatingScalePage;","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\nimport utils from \"../utils\";\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass ExplainReviewPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n\n    this.handleNext = () => {\n      survey.get().reviewSequence = utils.numberList(survey.get().selectedMovies.length);\n      this.props.history.replace(`/review/${survey.get().reviewSequence.shift()}`);\n    }\n  }\n\n  render() {\n    let listLen = survey.get().selectedMovies.length;\n    let now = parseInt(200/(listLen + 3));\n\n    const progressInstance = (\n      <div className={\"bottomPad\"}>\n        <div className={\"progressBarContainer\"}>\n          <ProgressBar variant=\"info\" now={100} label={`Section 1`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 2`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 3`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 4`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 5`} />\n        </div>\n        <div className={\"progressBarContainer\"}>\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={now} label={`${now}%`} />\n        </div>\n      </div>\n    );\n    \n    return (\n      <div className=\"vertical-center\">\n        <Container>\n          {progressInstance}\n          <h6>For the products that you rated so far using 5 different scales, all the 5 numeric values of your ratings will appear\n          for each product.If the ratings appear different for different scales, please select the value you think is best suited for the product.</h6>\n          <h6>For example, let us assume you have given the KFC the following 6 different values for 5 rating scales: </h6>\n          <img src={\"https://upload.wikimedia.org/wikipedia/sco/b/bf/KFC_logo.svg\"} alt=\"Poster\" height=\"240\" width=\"240\" />\n          {\n            [3,3,4,3,4,4].map((r, i) =>\n              <div key={i}>\n                <Row className=\"justify-content-md-center\">\n                  <Col xs lg=\"1\">\n                    <input type=\"checkbox\" />\n                  </Col>\n                  <Col xs lg=\"1\">\n                    <h5>{r}</h5>\n                  </Col>\n                </Row>\n                <br/>\n              </div>\n            )\n          }\n          <h6>If you think out of these values, 4 is the best rate for this product, then please select any one of the 3 rd, 5 th and last check boxes since they have the value 4. You just have to select any one of them and the rest will be automatically selected.If you have provided same value for a product, i.e.all 5 boxes are same, then kindly select any one of all boxes.Please be careful select only one value, which means\n          if you select value 4, you can not select any other number.</h6>\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Next</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ExplainReviewPage;","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\nimport symbols from \"../symbols.json\";\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass ReviewPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: {}\n    };\n\n    this.getMovie = () => survey.get().selectedMovies[parseInt(this.props.match.params.movieid)]\n\n    this.getSelected = () => Object.keys(this.state.selected).map(i => parseInt(i))\n\n    this.handleChange = event => {\n      const { name, checked } = event.target;\n      const selected = this.state.selected;\n\n      if (!checked) {\n        delete selected[name];\n      } else {\n        selected[name] = true;\n      }\n\n      this.setState({\n        selected\n      });\n    }\n\n    this.handleNext = () => {\n      if (Object.keys(this.state.selected).length === 0) {\n        return alert(\"Please select\");\n      }\n\n      const movie = this.getMovie();\n      const selectedScores = this.getSelected();\n      const chosenScores = [];\n      symbols.allRatingStyles\n        .forEach((r, i) => selectedScores.indexOf(movie[r]) > -1 && chosenScores.push(i));\n      this.getMovie().chosenRatings = chosenScores;\n\n      if (survey.get().reviewSequence.length > 0) {\n        this.props.history.replace(`/review/${survey.get().reviewSequence.shift()}`);\n        return this.setState({selected: {}});\n      }\n      this.props.history.replace(`/askemail`);\n    }\n  }\n\n  render() {\n    const movie = this.getMovie();\n\n    let listLen = survey.get().selectedMovies.length;\n    let now = parseInt(100*((listLen + 2) - survey.get().reviewSequence.length)/(listLen + 3));\n\n    const progressInstance = (\n      <div className={\"bottomPad\"}>\n        <div className={\"progressBarContainer\"}>\n          <ProgressBar variant=\"info\" now={100} label={`Section 1`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 2`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 3`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 4`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 5`} />\n        </div>\n        <div className={\"progressBarContainer\"}>\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={now} label={`${now}%`} />\n        </div>\n      </div>\n    );\n    \n    return (\n      <div className=\"text-center\">\n        <Container>\n          {progressInstance}\n          <h6>For the products that you rated so far using 5 different scales, all the 5 numeric values of your ratings will appear for each product.please select any one of the boxes which have the value you think is best suited\n          for the product:</h6>\n          <img src={movie.img} alt=\"Poster\" height=\"240\" width=\"240\" />\n          <h6>{movie.name}</h6>\n          {\n            symbols.allRatingStyles.map((r, i) =>\n              <div key={i}>\n                <Row className=\"justify-content-md-center\">\n                  <Col xs lg=\"1\">\n                    <input type=\"checkbox\" name={movie[r]} checked={this.getSelected().indexOf(movie[r]) > -1} onChange={this.handleChange} />\n                  </Col>\n                  <Col xs lg=\"1\">\n                    <h5>{movie[r]}</h5>\n                  </Col>\n                </Row>\n                <br/>\n              </div>\n            )\n          }\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Next</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ReviewPage;","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\nimport Rating from \"react-rating\";\nimport \"../survey.css\";\nimport symbols from \"../symbols.json\";\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass ReviewoverallPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      \"choice\": null\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: parseInt(value)\n      });\n    }\n\n    this.handleNext = () => {\n      survey.get().reviewOverall = this.state.choice;\n      this.props.history.replace(`/commonratingscalepage`);\n    }\n  }\n\n  render() {\n    \n    const progressInstance = (\n      <div className={\"bottomPad\"}>\n        <div className={\"progressBarContainer\"}>\n          <ProgressBar variant=\"info\" now={100} label={`Section 1`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 2`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 3`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 4`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 5`} />\n        </div>\n        <div className={\"progressBarContainer\"}>\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={100} label={`100%`} />\n          <ProgressBar striped animated variant=\"success\" now={0} label={`0%`} />\n        </div>\n      </div>\n    );\n\n    return (\n      <div>\n        <Container>\n          {progressInstance}\n          <h6>Your ratings will be considered very helpful into the final ratings of the product, would you like to re-rate it again ? If so, which one of the rating scales would you use?</h6>\n          {\n            symbols.allRatingStyles.map((r, i) =>\n              <div key={i}>\n                <Row className=\"justify-content-md-center\">\n                  <Col xs lg=\"1\">\n                    <input type=\"radio\" name=\"choice\" value={i} checked={this.state.choice === i} onChange={this.handleChange} />\n                  </Col>\n                  <Col xs lg=\"2\">\n                    {\n                      <Rating\n                        style={{width: \"100%\"}}\n                        readonly\n                        stop={5}\n                        initialRating={5}\n                        fullSymbol={symbols[r].full}\n                      />\n                    }\n                  </Col>\n                </Row>\n                <br/>\n              </div>\n            )\n          }\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Submit</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ReviewoverallPage;","import React, { Component } from \"react\";\nimport { Spinner, Modal } from 'react-bootstrap';\n\nclass AsyncAwareContainer extends Component {\n  render() {\n    var loading = this.props.loading !== undefined && this.props.loading !== null;\n    var message = 'Loading';\n    if (typeof this.props.loading === 'string' && this.props.loading.trim().length > 0)\n      message = this.props.loading;\n\n    return (\n      <div>\n        {\n          loading ? \n            (\n              <Modal show={loading} centered>\n                <Modal.Body>\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                    &nbsp; {message}\n                  </div>\n                </Modal.Body>\n              </Modal>\n            ) :\n            React.createElement('div', null, this.props.children)\n        }\n      </div>\n    );\n  }\n}\n\nexport default AsyncAwareContainer;","import React from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport AsyncAwareContainer from \"../AsyncAwareContainer\";\nimport api from \"../../Data/api\";\n\nclass AskEmailPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    this.handleNext = () => {\n      this.props.history.replace(\"/email\");\n    }\n\n    this.handlExit = async () => {\n      try {\n        this.setState({loading: 'Submitting ...'});\n        await api.submit();\n        this.props.history.replace(\"/end\");\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    return (\n      <AsyncAwareContainer loading={this.state.loading}>\n        <Container>\n          <h6> In appreciation of your participation, we would like to offer you the opportunity to enter in a raffle to win $50 gift vouchers. You need to provide your email id if you want to enter in the raffle draw. If you do not wish to participate in the raffle, you may skip this step and exit the survey.\n          </h6>\n          <h6>Do you wish to participate in the raffle?</h6>\n          <br/><br/>\n          <Button style={{\"float\":\"left\"}} onClick={this.handleNext}>Yes and go to next page</Button>\n          <Button style={{\"float\":\"right\"}} onClick={this.handlExit}>No and EXIT</Button>\n        </Container>\n      </AsyncAwareContainer>\n    );\n  }\n}\n\nexport default AskEmailPage;","import React from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport FormRow from \"../FormRow\";\nimport survey from \"../../Data/survey\";\nimport AsyncAwareContainer from \"../AsyncAwareContainer\";\nimport api from \"../../Data/api\";\n\nclass EmailPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: null\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    }\n\n    this.handleSubmit = async () => {\n      try {\n        this.setState({loading: 'Submitting ...'});\n        survey.get().email = this.state.email;\n        await api.submit();\n        this.props.history.replace(\"/end\");\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    return (\n      <AsyncAwareContainer loading={this.state.loading}>\n        <Container>\n          <h6> Please provide your email ID to participate in the raffle draw selection: </h6>\n          <br/><br/>\n          <FormRow name=\"email\" onChange={this.handleChange} />\n          <Button style={{\"float\":\"right\"}} onClick={this.handleSubmit}>Submit</Button>\n        </Container>\n      </AsyncAwareContainer>\n    );\n  }\n}\n\nexport default EmailPage;","import React from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\nimport Rating from \"react-rating\";\nimport \"../survey.css\";\nimport symbols from \"../symbols.json\";\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nclass RatePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // do NOT do this or the router stops working, WTF?\n    // const movieid = parseInt(this.props.match.params.movieid);\n    // const ratingstyle = this.props.match.params.ratingstyle;\n\n    this.parse = () => {\n      const m = parseInt(this.props.match.params.movieid);\n      const r = this.props.match.params.ratingstyle;\n       return { m, r };\n    }\n\n    this.handleChange = rating => {\n      const { m, r } = this.parse();\n      survey.get().selectedMovies[m][r] = rating;\n    }\n\n    this.handleNav = () => {\n      const { m, r } = this.parse();\n      if (typeof survey.get().selectedMovies[m][r] !== 'number') {\n        return alert(\"Please rate the product\");\n      }\n\n      // if (survey.get().navSequence.length ===\n      //     (survey.get().selectedMovies.length * symbols.ratingStyles.length) / 2) {\n      //     return this.props.history.replace(`/sadhappy2`);\n      //   }\n\n      var ln = survey.get().navSequence.length;\n      let listLen = survey.get().selectedMovies.length;\n\n      var curNum = (listLen * 4) - ln;\n      console.log(curNum);\n      console.log(curNum%listLen);\n\n      if (curNum%listLen == 0) {\n        var pageNo = parseInt((curNum-1)/listLen) + 3;\n        return this.props.history.replace(`/info/${pageNo}`);\n      } else {\n        const { movieid, ratingstyle } = survey.get().navSequence.pop();\n        return this.props.history.replace(`/rate/${movieid}/${ratingstyle}`);\n      }  \n    }\n  }\n\n  render() {\n    const {m, r} = this.parse();\n    const {name, img} = survey.get().selectedMovies[m];\n    const rated = survey.get().selectedMovies[m][r];\n\n    console.log(survey.get().navSequence.length);\n    let listLen = survey.get().selectedMovies.length;    \n    let movie_number = (listLen * 4) - survey.get().navSequence.length;\n    let sectionNo = parseInt((movie_number-1)/listLen) + 1;\n\n    const getNow = (curSec, rSec, curMovieNo, label) => {\n      console.log(curSec, rSec, curMovieNo);\n      if(curSec < rSec)\n        return label? \"\":0;\n      else if(curSec > rSec)\n        return label? \"100%\":100;\n      else {\n        let listLen = survey.get().selectedMovies.length;\n        var percent = parseInt(100*parseInt((curMovieNo-1)%listLen)/(listLen+1));\n        return label? percent+\"%\":percent;\n      }\n    };\n\n    const progressInstance = (\n      <div className={\"bottomPad\"}>\n        <div className={\"progressBarContainer\"}>\n          <ProgressBar variant=\"info\" now={100} label={`Section 1`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 2`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 3`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 4`} />\n          <ProgressBar variant=\"info\" now={100} label={`Section 5`} />\n        </div>\n        <div className={\"progressBarContainer\"}>\n          <ProgressBar striped animated variant=\"success\" now={getNow(sectionNo, 1, movie_number, false)} label={getNow(sectionNo, 1, movie_number, true)} />\n          <ProgressBar striped animated variant=\"success\" now={getNow(sectionNo, 2, movie_number, false)} label={getNow(sectionNo, 2, movie_number, true)} />\n          <ProgressBar striped animated variant=\"success\" now={getNow(sectionNo, 3, movie_number, false)} label={getNow(sectionNo, 3, movie_number, true)} />\n          <ProgressBar striped animated variant=\"success\" now={getNow(sectionNo, 4, movie_number, false)} label={getNow(sectionNo, 4, movie_number, true)} />\n          <ProgressBar striped animated variant=\"success\" now={getNow(sectionNo, 5, movie_number, false)} label={getNow(sectionNo, 5, movie_number, true)} />\n        </div>\n      </div>\n    );\n\n    return (\n      <div className=\"text-center\">\n        <Container>\n          <h6></h6>\n          {progressInstance}\n          <p>Please rate the product: </p>\n          <img src={img} alt=\"Poster\" height=\"240\" width=\"240\" />\n          <h6>{name}</h6>\n          {\n            <Rating\n              stop={5}\n              emptySymbol={symbols[r].empty}\n              fullSymbol={symbols[r].full}\n              onChange={this.handleChange}\n              initialRating={rated}\n            />\n          }\n          <br/>\n          <p></p>\n          <span>\n            <Button style={{\"float\":\"center\"}} onClick={this.handleNav}>Next</Button>\n          </span>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default RatePage;","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass EndPage extends React.Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <p></p>\n          <p></p>\n          <center><h5> Thank you for your participation! </h5></center>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default EndPage;","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass ErrorPage extends React.Component {\n  render() {\n    return (\n      <div className=\"vertical-center\">\n        <Container>\n          <h3>Error :(</h3>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ErrorPage;","import React from \"react\";\nimport { HashRouter, Switch, Redirect, Route } from \"react-router-dom\";\nimport { Beforeunload } from 'react-beforeunload';\n\nimport Demographics from \"./components/Demographics/Demographics\";\nimport ConsentPage from \"./components/ConsentPage/ConsentPage\";\nimport PersonalityPage from \"./components/PersonalityPage/PersonalityPage\";\n// import MoodPage from \"./components/MoodPage/MoodPage\";\n// import SadHappyPage from \"./components/SadHappyPage/SadHappyPage\";\nimport CommonRatePage from \"./components/CommonRatePage/CommonRatePage\";\nimport CommonRatingScalePage from \"./components/CommonRatingScalePage/CommonRatingScalePage\";\nimport ExplainReviewPage from \"./components/ExplainReviewPage/ExplainReviewPage\";\nimport ReviewPage from \"./components/ReviewPage/ReviewPage\";\nimport ReviewoverallPage from \"./components/ReviewoverallPage/ReviewoverallPage\";\nimport AskEmailPage from \"./components/AskEmailPage/AskEmailPage\";\nimport EmailPage from \"./components/EmailPage/EmailPage\";\nimport RatePage from \"./components/RatePage/RatePage\";\nimport EndPage from \"./components/EndPage/EndPage\";\nimport ErrorPage from \"./ErrorPage\";\n\nimport { string, object, number, array } from 'yup';\nimport survey from \"./Data/survey\";\n\nconst num = number().moreThan(-1).required().integer();\nconst str = string().required();\nconst obj = o => object().shape(o);\n\nconst _personality = obj({\n  talkative: num,\n  faultWithOthers: num,\n  thoroughJob: num,\n  depressed: num,\n  original: num,\n  reserved: num,\n  helpful: num,\n  careless: num,\n  relaxed: num,\n  curious: num,\n  energy: num,\n  quarrels: num,\n  reliable: num,\n  tense: num,\n  deepThinker: num,\n  enthusiasm: num,\n  forgiving: num,\n  disorganized: num,\n  worried: num,\n  activeImagination: num,\n  quiet: num,\n  trusting: num,\n  lazy: num,\n  upset: num,\n  inventive: num,\n  assertive: num,\n  coldAloof: num,\n  perseverence: num,\n  moody: num,\n  artistic: num,\n  shy: num,\n  kind: num,\n  efficient: num,\n  calm: num,\n  routineWork: num,\n  outgoing: num,\n  rude: num,\n  makePlans: num,\n  nervous: num,\n  reflective: num,\n  fewArtInterest: num,\n  cooperative: num,\n  distracted: num,\n  sophisticatedInArt: num,\n  positiveEff1: num,\n  positiveEff2: num,\n  positiveEff3: num,\n  positiveEff5: num,\n  negativeEff1: num,\n  negativeEff2: num,\n  negativeEff3: num,\n  negativeEff4: num,\n  negativeEff6: num,\n  otherEff1: num,\n  otherEff2: num,\n  otherEff3: num,\n  otherEff5: num,\n  age: num,\n  gender: string().required(),\n  country: string().required()\n});\n\nconst _movie = array().of(obj({\n  \"name\": str,\n  \"img\": str\n  // \"watched\": str\n})).min(0);\n\nconst _navSeq = array().of(obj({\n  \"movieid\": num,\n  \"ratingstyle\": str\n})).min(0);\n\nconst _reviewSeq = array().of(num).min(0);\n\nconst _ratedMovie = array().of(obj({\n  \"name\": str,\n  \"img\": str,\n  \"commonRate\": num,\n  \"color-star\": num,\n  \"color-emoji\": num,\n  \"emoji\": num,\n  \"color-personality\": num,\n})).min(0);\n\nconst _reviewedMovie = array().of(obj({\n  \"name\": str,\n  \"img\": str,\n  \"commonRate\": num,\n  \"color-star\": num,\n  \"color-emoji\": num,\n  \"emoji\": num,\n  \"color-personality\": num,\n  \"chosenRatings\": array().of(num).min(1)\n})).min(0);\n\nconst _reviewOverall = num;\n\nconst sadHappy1Schema = obj({\n  personality: _personality\n});\n\nconst commonSchema = obj({\n  personality: _personality,\n  selectedMovies: _movie,\n  navSequence: _navSeq\n  // sadhappy1: str\n});\n\nconst rateSchema = commonSchema;\n\nconst sadHappy2Schema = commonSchema;\n\nconst reviewoverallSchema = obj({\n  personality: _personality,\n  selectedMovies: _ratedMovie\n  // sadhappy1: str,\n  // sadhappy2: str\n});\n\nconst sadHappy3Schema = reviewoverallSchema;\n\nconst reviewEachSchema = obj({\n  personality: _personality,\n  selectedMovies: _ratedMovie,\n  reviewOverall: _reviewOverall,\n  reviewSequence : _reviewSeq\n  // sadhappy1: str,\n  // sadhappy2: str,\n  // sadhappy3: str\n});\n\nconst explainReviewSchema = reviewEachSchema;\n\nconst emailSchema = obj({\n  personality: _personality,\n  selectedMovies: _reviewedMovie,\n  reviewOverall: _reviewOverall\n  // sadhappy1: str,\n  // sadhappy2: str,\n  // sadhappy3: str\n});\n\nconst askEmailSchema = emailSchema;\n\nconst endSchema = emailSchema;\n\nconst schemas = {\n  \"/sadhappy1\": sadHappy1Schema,\n  \"/sadhappy2\": sadHappy2Schema,\n  \"/sadhappy3\": sadHappy3Schema,\n  \"/common\": commonSchema,\n  \"/rate/:movieid/:ratingstyle\": rateSchema,\n  \"/reviewoverall\": reviewoverallSchema,\n  \"/explainreview\": explainReviewSchema,\n  \"/review/:movieid\": reviewEachSchema,\n  \"/askemail\": askEmailSchema,\n  \"/email\": emailSchema,\n  \"/end\": endSchema\n};\n\nfunction RestrictedRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render = {\n        props => {\n          const schema = schemas[props.match.path];\n          if (!schema) {\n            return <Redirect\n              to={{\n                pathname: \"/error\",\n                state: { from: props.location }\n              }}\n            />\n          }\n\n          let transition;\n          try {\n            schema.validateSync(survey.get());\n\n            switch(props.match.path) {\n              case \"/sadhappy1\":\n                props.saveAs = \"sadhappy1\";\n                props.nextRoute = \"/common\";\n                break;\n              case \"/sadhappy2\":\n                props.saveAs = \"sadhappy2\";\n                const { movieid, ratingstyle } = survey.get().navSequence.pop();\n                props.nextRoute = `/rate/${movieid}/${ratingstyle}`;\n                break;\n              case \"/sadhappy3\":\n                props.saveAs = \"sadhappy3\";\n                props.nextRoute = \"/reviewoverall\";\n                break;\n              default: break;\n            }\n\n            transition = <Component {...props} />\n          } catch(err) {\n            alert(err);\n            transition = <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: props.location }\n              }}\n            />\n          }\n\n          return transition;\n        }\n      }\n    />\n  );\n}\n\n// <PrivateRoute exact path=\"/orders/include\" component={IncludePage} />\n// Followed https://github.com/gothinkster/react-mobx-realworld-example-app\n// To adopt mobx faster later on\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Beforeunload onBeforeunload={() => \"Survey data can be loss, are you sure?\"}>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={ConsentPage} />\n            <Route exact path=\"/demographics\" component={Demographics} />\n            <Route exact path=\"/info/:pageNo\" component={PersonalityPage} />\n            <Route exact path=\"/error\" component={ErrorPage} />\n            <RestrictedRoute exact path=\"/common\" component={CommonRatePage} />\n            <RestrictedRoute exact path=\"/reviewoverall\" component={ReviewoverallPage} />\n            <Route exact path=\"/commonratingscalepage\" component={CommonRatingScalePage} />\n            <RestrictedRoute exact path=\"/explainreview\" component={ExplainReviewPage} />\n            <RestrictedRoute exact path=\"/askemail\" component={AskEmailPage} />\n            <RestrictedRoute exact path=\"/email\" component={EmailPage} />\n            <RestrictedRoute exact path=\"/end\" component={EndPage} />\n            <RestrictedRoute exact path=\"/rate/:movieid/:ratingstyle\" component={RatePage} />\n            <RestrictedRoute exact path=\"/review/:movieid\" component={ReviewPage} />\n          </Switch>\n        </HashRouter>\n      </Beforeunload>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}