{"version":3,"sources":["Data/survey.js","components/utils.js","components/PersonalityPage/PersonalityPage.js","components/SadHappyPage/SadHappyPage.js","components/CommonRatePage/CommonRatePage.js","components/ExplainReviewPage/ExplainReviewPage.js","components/ReviewPage/ReviewPage.js","components/ReviewoverallPage/ReviewoverallPage.js","components/AsyncAwareContainer.js","Data/api.js","components/AskEmailPage/AskEmailPage.js","components/FormRow.js","components/EmailPage/EmailPage.js","components/RatePage/RatePage.js","components/EndPage/EndPage.js","ErrorPage.js","App.js","serviceWorker.js","index.js"],"names":["survey","text","split","map","item","index","toUpperCase","join","data","JSON","parse","stringify","limit","list","i","push","selectedMovies","movies","movieids","utils","length","ratingstyles","symbols","ratingStyles","navSequence","forEach","movieid","ratingstyle","shuffle","key","Object","keys","k","PersonalityPage","props","state","talkative","dot","get","faultWithOthers","thoroughJob","depressed","handleChange","event","target","name","value","setState","parseInt","handleNext","personality","history","replace","radioRow","option","v","type","checked","onChange","className","Container","border","cellPadding","Button","style","onClick","this","React","Component","SadHappyPage","choice","saveAs","nextRoute","Jumbotron","fluid","marginLeft","marginRight","CommonRatePage","mi","r","commonRate","filter","m","alert","pop","handleBack","window","confirm","ListGroup","overflow","horizontal","img","Item","src","alt","height","width","initialRating","stop","emptySymbol","empty","fullSymbol","full","ExplainReviewPage","reviewSequence","shift","Row","Col","xs","lg","ReviewPage","selected","getMovie","match","params","getSelected","movie","selectedScores","chosenScores","allRatingStyles","indexOf","chosenRatings","ReviewoverallPage","reviewOverall","readonly","AsyncAwareContainer","loading","undefined","message","trim","Modal","show","centered","Body","Spinner","animation","variant","createElement","children","a","async","axios","post","AskEmailPage","handlExit","api","componentUnmounted","FormRow","FormControl","placeholder","EmailPage","email","handleSubmit","RatePage","rating","handleNav","rated","EndPage","ErrorPage","num","number","moreThan","required","integer","str","string","obj","o","object","shape","_personality","_movie","array","of","min","_navSeq","_reviewSeq","_ratedMovie","_reviewedMovie","_reviewOverall","sadHappy1Schema","commonSchema","sadhappy1","rateSchema","sadHappy2Schema","reviewoverallSchema","sadhappy2","sadHappy3Schema","reviewEachSchema","sadhappy3","explainReviewSchema","emailSchema","schemas","RestrictedRoute","component","rest","render","transition","schema","path","to","pathname","from","location","validateSync","err","App","onBeforeunload","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdcd351d.chunk.js","sourcesContent":["import movies from \"./movies.json\";\nimport symbols from \"../components/symbols.json\";\nimport utils from \"../components/utils\";\nimport shuffle from \"shuffle-array\";\n\nlet survey;\n\nexport default {\n\tget: () => {\n    if (!survey) {\n      survey = {};\n      survey.selectedMovies = movies;\n      const movieids = utils.numberList(movies.length);\n      const ratingstyles = symbols.ratingStyles;\n\n      survey.navSequence = [];\n      movieids.forEach(movieid =>\n        ratingstyles.forEach(ratingstyle =>\n          survey.navSequence.push({\n            movieid,\n            ratingstyle\n          })\n        )\n      );\n      shuffle(survey.navSequence);\n    }\n    return survey;\n  },\n  reset: () => {\n    survey = {};\n  },\n  retain: key => {\n  \tif (survey) {\n      Object.keys(survey).forEach(k => k !== key && delete survey[k]);\n    }\n  },\n  log: () => {\n    console.log(JSON.stringify(survey));\n  }\n}\n\nconst test1 = {\n    \"personality\":{\n        \"talkative\":0,\n        \"faultWithOthers\":1,\n        \"thoroughJob\":2,\n        \"depressed\":3\n    },\n    \"selectedMovies\":[\n        {\n            \"name\":\"Van Helsing\",\n            \"img\":\"https://prodigits.co.uk/thumbs/wallpapers/p2/fcelebs/15/9ab51d9c12256001.jpg\"\n        },\n        {\n            \"name\":\"Finding Nemo(2003)\",\n            \"img\":\"https://i.pinimg.com/originals/71/b2/37/71b2379b1010282d283c21f1079016fb.jpg\"\n        }\n    ],\n    \"navSequence\":[\n        {\n            \"movieid\":0,\n            \"ratingstyle\":\"color-emoji\"\n        },\n        {\n            \"movieid\":1,\n            \"ratingstyle\":\"circle\"\n        },\n        {\n            \"movieid\":0,\n            \"ratingstyle\":\"circle\"\n        },\n        {\n            \"movieid\":0,\n            \"ratingstyle\":\"color-circle\"\n        },\n        {\n            \"movieid\":0,\n            \"ratingstyle\":\"color-star\"\n        },\n        {\n            \"movieid\":1,\n            \"ratingstyle\":\"emoji\"\n        },\n        {\n            \"movieid\":0,\n            \"ratingstyle\":\"emoji\"\n        },\n        {\n            \"movieid\":1,\n            \"ratingstyle\":\"color-star\"\n        },\n        {\n            \"movieid\":1,\n            \"ratingstyle\":\"color-emoji\"\n        },\n        {\n            \"movieid\":1,\n            \"ratingstyle\":\"color-circle\"\n        }\n    ]\n};\n\nconst test2 = {\n    \"personality\":{\n        \"talkative\":0,\n        \"faultWithOthers\":1,\n        \"thoroughJob\":2,\n        \"depressed\":3\n    },\n    \"selectedMovies\":[\n        {\n            \"name\":\"Van Helsing\",\n            \"img\":\"https://prodigits.co.uk/thumbs/wallpapers/p2/fcelebs/15/9ab51d9c12256001.jpg\",\n            \"commonRate\":3,\n            \"emoji\":5,\n            \"color-star\":2,\n            \"color-circle\":4,\n            \"circle\":5,\n            \"color-emoji\":3\n        },\n        {\n            \"name\":\"Finding Nemo(2003)\",\n            \"img\":\"https://i.pinimg.com/originals/71/b2/37/71b2379b1010282d283c21f1079016fb.jpg\",\n            \"commonRate\":4,\n            \"color-circle\":2,\n            \"color-emoji\":4,\n            \"color-star\":3,\n            \"emoji\":3,\n            \"circle\":3\n        }\n    ],\n    \"navSequence\":[\n\n    ],\n    \"reviewOverall\":\"color-star\",\n    \"reviewSequence\":[\n        0,\n        1\n    ]\n}\n\n// survey = test2;","export default {\n  propercase: text => text.split(\"\").map((item,index) => index === 0 ? item.toUpperCase() : item).join(\"\"),\n  clone: data => JSON.parse(JSON.stringify(data)),\n  numberList: limit => {\n    const list = [];\n  \tfor (var i = 0; i < limit; i++) {\n      list.push(i);\n    }\n    return list;\n  }\n};","import React from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport utils from \"../utils\";\nimport survey from \"../../Data/survey\";\nimport dot from \"dot-prop\";\n\nclass PersonalityPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      talkative: dot.get(survey.get(), 'personality.talkative', 0),\n      faultWithOthers: dot.get(survey.get(), 'personality.faultWithOthers', 0),\n      thoroughJob: dot.get(survey.get(), 'personality.thoroughJob', 0),\n      depressed: dot.get(survey.get(), 'personality.depressed', 0)\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: parseInt(value)\n      });\n    }\n\n    this.handleNext = () => {\n      survey.get().personality = utils.clone(this.state);\n      this.props.history.replace(\"/sadhappy1\");\n    }\n  }\n\n  render() {\n    const radioRow = (option) => {\n      return [0,1,2,3,4].map((v, i) =>\n        <td key={i}>\n          <input type=\"radio\" name={option} value={v} checked={this.state[option] === v} onChange={this.handleChange} />\n        </td>\n      )\n    }\n    return (\n      <div className=\"vertical-center\">\n        <Container>\n          <p> Here are a number of characteristics that may or may not apply to you. For example, do you agree that you are someone who likes to spend time with others? Please select a box next to each statement to indicate the extent to which you agree or disagree with that statement. </p>\n          <br/>\n          <p> I see myself as someone who… </p>\n          <table border=\"0\" cellPadding=\"10\">\n            <tbody>\n              <tr>\n                <th></th>\n                <th>Disagree Strongly</th>\n                <th>Disagree a little</th>\n                <th>Neither agree nor disagree</th>\n                <th>Agree a little</th>\n                <th>Agree Strongly</th>\n              </tr>\n              <tr>\n                <td>Is talkative</td>\n                { radioRow(\"talkative\") }\n              </tr>\n              <tr>\n                <td>Tends to find fault with others</td>\n                { radioRow(\"faultWithOthers\") }\n              </tr>\n              <tr>\n                <td>Does a thorough job</td>\n                { radioRow(\"thoroughJob\") }\n              </tr>\n              <tr>\n                <td>Is depressed, blue</td>\n                { radioRow(\"depressed\") }\n              </tr>\n            </tbody>\n          </table>\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Next</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default PersonalityPage;","import React from \"react\";\nimport { Button, Jumbotron } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\n\nclass SadHappyPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      \"choice\": null\n    };\n\n    this.handleChange = event => {\n      const { value } = event.target;\n      this.setState({\n        choice: parseInt(value)\n      });\n    }\n\n    this.handleNext = () => {\n      survey.get()[this.props.saveAs] = this.state.choice;\n      this.props.history.replace(this.props.nextRoute);\n    }\n  }\n\n  render() {\n    const radioRow = () =>\n      [1,2,3].map((v, i) =>\n        <td key={i}>\n          <input type=\"radio\" value={v} checked={this.state.choice === v} onChange={this.handleChange} />\n        </td>\n      )\n    return (\n      <div className=\"text-center\">\n        <Jumbotron fluid>\n          <h5>On a scale of 1 to 3, how happy or sad are you feeling right now?</h5>\n          <table style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }} border=\"0\" cellPadding=\"10\">\n            <tbody>\n              <tr>\n                <th></th>\n                <th>1</th>\n                <th>2</th>\n                <th>3</th>\n                <th></th>\n              </tr>\n              <tr>\n                <td>Sad</td>\n                {radioRow()}\n                <td>Happy</td>\n              </tr>\n            </tbody>\n          </table>\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Next</Button>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default SadHappyPage;","import React from \"react\";\nimport { Button, Container, ListGroup } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\nimport Rating from \"react-rating\";\nimport \"../survey.css\";\nimport symbols from \"../symbols.json\";\n\nclass CommonRatePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = mi => r => {\n      survey.get().selectedMovies[mi].commonRate = r;\n    }\n\n    this.handleNext = () => {\n      if (survey.get().selectedMovies.filter(m => typeof m.commonRate !== 'number').length > 0) {\n        return alert(\"Please rate all the movies\");\n      }\n      const { movieid, ratingstyle } = survey.get().navSequence.pop();\n      this.props.history.replace(`/rate/${movieid}/${ratingstyle}`);\n    }\n\n    this.handleBack = () => {\n      if (window.confirm('Are you sure? All selected movies will be cleared')) {\n        survey.retain(\"personality\");\n        this.props.history.replace(`/`);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <h6>Please rate the movies you have selected :</h6>\n          <ListGroup \n            style={{\n              overflow: \"auto\"\n            }}\n            horizontal\n          >\n            {\n              survey.get()\n                .selectedMovies\n                .map((m, i) => {\n                  const {name, img, commonRate} = m;\n                  return <ListGroup.Item key={i}>\n                    <img src={img} alt=\"Poster\" height=\"400\" width=\"240\" /> <br/>\n                    <h6> {name} </h6>\n                      <Rating\n                        initialRating={commonRate}\n                        stop={5}\n                        emptySymbol={symbols.commonRate.empty}\n                        fullSymbol={symbols.commonRate.full}\n                        onChange={this.handleChange(i)}\n                      />\n                  </ListGroup.Item>\n                })\n            }\n          </ListGroup>\n          <br/>\n          <Button style={{\"float\":\"left\"}} onClick={this.handleBack}>Previous</Button>\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Next</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default CommonRatePage;","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\nimport utils from \"../utils\";\n\nclass ExplainReviewPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n\n    this.handleNext = () => {\n      survey.get().reviewSequence = utils.numberList(survey.get().selectedMovies.length);\n      this.props.history.replace(`/review/${survey.get().reviewSequence.shift()}`);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"vertical-center\">\n        <Container>\n          <h6>For the movies that you rated so far using 6 different scales, all the 6 numeric values of your ratings will appear for each movie. If the ratings appear different for different scales, please select the value you think is best suited for the movie.</h6>\n          <h6>For example, let us assume you have given the movie Deadpool the following 6 different values for 6 rating scales:</h6>\n          <img src={\"https://www.dvd-trailers.gr/dvd/deadpool_2016.jpg\"} alt=\"Poster\" height=\"400\" width=\"240\" />\n          {\n            [3,3,4,3,4,4].map((r, i) =>\n              <div key={i}>\n                <Row className=\"justify-content-md-center\">\n                  <Col xs lg=\"1\">\n                    <input type=\"checkbox\" />\n                  </Col>\n                  <Col xs lg=\"1\">\n                    <h5>{r}</h5>\n                  </Col>\n                </Row>\n                <br/>\n              </div>\n            )\n          }\n          <h6>If you think out of these values, 4 is the best rate for this movie, then please select 3rd, 4th and last check boxes since they have the value 4. If you have provided same value for a movie, i.e. all 6 boxes are same, then kindly select all boxes</h6>\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Next</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ExplainReviewPage;","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\nimport symbols from \"../symbols.json\";\n\nclass ReviewPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: {}\n    };\n\n    this.getMovie = () => survey.get().selectedMovies[parseInt(this.props.match.params.movieid)]\n\n    this.getSelected = () => Object.keys(this.state.selected).map(i => parseInt(i))\n\n    this.handleChange = event => {\n      const { name, checked } = event.target;\n      const selected = this.state.selected;\n\n      if (!checked) {\n        delete selected[name];\n      } else {\n        selected[name] = true;\n      }\n\n      this.setState({\n        selected\n      });\n    }\n\n    this.handleNext = () => {\n      if (Object.keys(this.state.selected).length === 0) {\n        return alert(\"Please select\");\n      }\n\n      const movie = this.getMovie();\n      const selectedScores = this.getSelected();\n      const chosenScores = [];\n      symbols.allRatingStyles\n        .forEach((r, i) => selectedScores.indexOf(movie[r]) > -1 && chosenScores.push(i));\n      this.getMovie().chosenRatings = chosenScores;\n\n      if (survey.get().reviewSequence.length > 0) {\n        this.props.history.replace(`/review/${survey.get().reviewSequence.shift()}`);\n        return this.setState({selected: {}});\n      }\n      this.props.history.replace(`/askemail`);\n    }\n  }\n\n  render() {\n    const movie = this.getMovie();\n    return (\n      <div className=\"text-center\">\n        <Container>\n          <h6>For the movies that you rated so far using 6 different scales, all the 6 numeric values of your ratings will appear for each movie. please select all the boxes which have the value you think is best suited for the movie:</h6>\n          <img src={movie.img} alt=\"Poster\" height=\"400\" width=\"240\" />\n          <h6>{movie.name}</h6>\n          {\n            symbols.allRatingStyles.map((r, i) =>\n              <div key={i}>\n                <Row className=\"justify-content-md-center\">\n                  <Col xs lg=\"1\">\n                    <input type=\"checkbox\" name={movie[r]} checked={this.getSelected().indexOf(movie[r]) > -1} onChange={this.handleChange} />\n                  </Col>\n                  <Col xs lg=\"1\">\n                    <h5>{movie[r]}</h5>\n                  </Col>\n                </Row>\n                <br/>\n              </div>\n            )\n          }\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Next</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ReviewPage;","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\nimport Rating from \"react-rating\";\nimport \"../survey.css\";\nimport symbols from \"../symbols.json\";\n\nclass ReviewoverallPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      \"choice\": null\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: parseInt(value)\n      });\n    }\n\n    this.handleNext = () => {\n      survey.get().reviewOverall = this.state.choice;\n      this.props.history.replace(`/explainreview`);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <h6>Your ratings will be considered very helpful into the final ratings provided by the studio, would you like to re-rate it again ? If so, which one of the rating scales would you use?</h6>\n          {\n            symbols.allRatingStyles.map((r, i) =>\n              <div key={i}>\n                <Row className=\"justify-content-md-center\">\n                  <Col xs lg=\"1\">\n                    <input type=\"radio\" name=\"choice\" value={i} checked={this.state.choice === i} onChange={this.handleChange} />\n                  </Col>\n                  <Col xs lg=\"2\">\n                    {\n                      <Rating\n                        style={{width: \"100%\"}}\n                        readonly\n                        stop={5}\n                        initialRating={5}\n                        fullSymbol={symbols[r].full}\n                      />\n                    }\n                  </Col>\n                </Row>\n                <br/>\n              </div>\n            )\n          }\n          <Button style={{\"float\":\"right\"}} onClick={this.handleNext}>Submit</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ReviewoverallPage;","import React, { Component } from \"react\";\nimport { Spinner, Modal } from 'react-bootstrap';\n\nclass AsyncAwareContainer extends Component {\n  render() {\n    var loading = this.props.loading !== undefined && this.props.loading !== null;\n    var message = 'Loading';\n    if (typeof this.props.loading === 'string' && this.props.loading.trim().length > 0)\n      message = this.props.loading;\n\n    return (\n      <div>\n        {\n          loading ? \n            (\n              <Modal show={loading} centered>\n                <Modal.Body>\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                    &nbsp; {message}\n                  </div>\n                </Modal.Body>\n              </Modal>\n            ) :\n            React.createElement('div', null, this.props.children)\n        }\n      </div>\n    );\n  }\n}\n\nexport default AsyncAwareContainer;","import axios from \"axios\";\nimport survey from \"./survey\"\n\nconst API = \"https://movie-survey.herokuapp.com\";\n\nexport default {\n  submit: async () => {\n    await axios.post(`${API}/submit`, survey.get());\n  }\n};","import React from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport AsyncAwareContainer from \"../AsyncAwareContainer\";\nimport api from \"../../Data/api\";\n\nclass AskEmailPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    this.handleNext = () => {\n      this.props.history.replace(\"/email\");\n    }\n\n    this.handlExit = async () => {\n      try {\n        this.setState({loading: 'Submitting ...'});\n        await api.submit();\n        this.props.history.replace(\"/end\");\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    return (\n      <AsyncAwareContainer loading={this.state.loading}>\n        <Container>\n          <h6> In appreciation of your participation, we would like to offer you the opportunity to enter in a raffle to win $50 gift vouchers. You need to provide your email id if you  want to enter in the raffle draw. If you do not wish to participate in the raffle, you may skip this step and exit the survey.\n          </h6>\n          <h6>Do you wish to participate in the survey?</h6>\n          <br/><br/>\n          <Button style={{\"float\":\"left\"}} onClick={this.handleNext}>Yes and go to next page</Button>\n          <Button style={{\"float\":\"right\"}} onClick={this.handlExit}>No and EXIT</Button>\n        </Container>\n      </AsyncAwareContainer>\n    );\n  }\n}\n\nexport default AskEmailPage;","import React, { Component } from \"react\";\nimport utils from './utils';\nimport { Col, FormControl, Row} from 'react-bootstrap';\n\nclass FormRow extends Component {\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col xs=\"3\">{utils.propercase(this.props.name)}</Col>\n          <Col>\n            <FormControl\n              placeholder={this.props.placeholder ? this.props.placeholder : \"\"}\n              type={this.props.type ? this.props.type : 'text'}\n              name={this.props.name}\n              onChange={this.props.onChange}/>\n          </Col>\n        </Row>\n        <br/>\n      </div>\n    );\n  }\n}\n\nexport default FormRow;","import React from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport FormRow from \"../FormRow\";\nimport survey from \"../../Data/survey\";\nimport api from \"../../Data/api\";\n\nclass EmailPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: null\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    }\n\n    this.handleSubmit = async () => {\n      try {\n        this.setState({loading: 'Submitting ...'});\n        survey.get().email = this.state.email;\n        await api.submit();\n        this.props.history.replace(\"/end\");\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <h6> Please provide your email id to participate in the raffle draw selection: </h6>\n          <br/><br/>\n          <FormRow name=\"email\" onChange={this.handleChange} />\n          <Button style={{\"float\":\"right\"}} onClick={this.handleSubmit}>Submit</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default EmailPage;","import React from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport survey from \"../../Data/survey\";\nimport Rating from \"react-rating\";\nimport \"../survey.css\";\nimport symbols from \"../symbols.json\";\n\nclass RatePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // do NOT do this or the router stops working, WTF?\n    // const movieid = parseInt(this.props.match.params.movieid);\n    // const ratingstyle = this.props.match.params.ratingstyle;\n\n    this.parse = () => {\n      const m = parseInt(this.props.match.params.movieid);\n      const r = this.props.match.params.ratingstyle;\n       return { m, r };\n    }\n\n    this.handleChange = rating => {\n      const { m, r } = this.parse();\n      survey.get().selectedMovies[m][r] = rating;\n    }\n\n    this.handleNav = () => {\n      const { m, r } = this.parse();\n      if (typeof survey.get().selectedMovies[m][r] !== 'number') {\n        return alert(\"Please rate the movie\");\n      }\n\n      if (survey.get().navSequence.length ===\n          (survey.get().selectedMovies.length * symbols.ratingStyles.length) / 2) {\n          return this.props.history.replace(`/sadhappy2`);\n        }\n\n      if (survey.get().navSequence.length > 0) {\n        const { movieid, ratingstyle } = survey.get().navSequence.pop();\n        return this.props.history.replace(`/rate/${movieid}/${ratingstyle}`);\n      }\n\n      return this.props.history.replace(`/sadhappy3`);\n    }\n  }\n\n  render() {\n    const {m, r} = this.parse();\n    const {name, img} = survey.get().selectedMovies[m];\n    const rated = survey.get().selectedMovies[m][r];\n    return (\n      <div className=\"text-center\">\n        <Container>\n          <h6>Please rate the movie:</h6>\n          <img src={img} alt=\"Poster\" height=\"400\" width=\"240\" />\n          <h6>{name}</h6>\n          {\n            <Rating\n              stop={5}\n              emptySymbol={symbols[r].empty}\n              fullSymbol={symbols[r].full}\n              onChange={this.handleChange}\n              initialRating={rated}\n            />\n          }\n          <br/>\n          <span>\n            <Button style={{\"float\":\"right\"}} onClick={this.handleNav}>Next</Button>\n          </span>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default RatePage;","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass EndPage extends React.Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <ul>\n            <li>Does the presence/ absence of colour have any effect regardless of the icons used in the rating scale?</li>\n            <li>Does the presence/ absence of colour  have any effect on user rating behavior when different (expressive vs non expressive ) icons are used in the rating scale?</li>\n            <li>In terms of colorful rating scale, is there any distinction in the rating behaviour of users between gradient vs discrete rating scale?</li>\n            <li>Does the level of emotional stability have any tangible influence on rating behaviour of users in interpreting the features of rating scales?</li>\n            <li>Does informing the users about the importance of their rating have any effect on the rating behaviour?</li>\n            <li>If the users choose to reconsider their primary ratings, which medium of rating would they choose?</li>\n          </ul>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default EndPage;","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass ErrorPage extends React.Component {\n  render() {\n    return (\n      <div className=\"vertical-center\">\n        <Container>\n          <h3>Error :(</h3>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ErrorPage;","import React from \"react\";\nimport { HashRouter, Switch, Redirect, Route } from \"react-router-dom\";\nimport { Beforeunload } from 'react-beforeunload';\n\nimport PersonalityPage from \"./components/PersonalityPage/PersonalityPage\";\nimport SadHappyPage from \"./components/SadHappyPage/SadHappyPage\";\nimport CommonRatePage from \"./components/CommonRatePage/CommonRatePage\";\nimport ExplainReviewPage from \"./components/ExplainReviewPage/ExplainReviewPage\";\nimport ReviewPage from \"./components/ReviewPage/ReviewPage\";\nimport ReviewoverallPage from \"./components/ReviewoverallPage/ReviewoverallPage\";\nimport AskEmailPage from \"./components/AskEmailPage/AskEmailPage\";\nimport EmailPage from \"./components/EmailPage/EmailPage\";\nimport RatePage from \"./components/RatePage/RatePage\";\nimport EndPage from \"./components/EndPage/EndPage\";\nimport ErrorPage from \"./ErrorPage\";\n\nimport { string, object, number, array } from 'yup';\nimport survey from \"./Data/survey\";\n\nconst num = number().moreThan(-1).required().integer();\nconst str = string().required();\nconst obj = o => object().shape(o);\n\nconst _personality = obj({\n  talkative: num,\n  faultWithOthers: num,\n  thoroughJob: num,\n  depressed: num\n});\n\nconst _movie = array().of(obj({\n  \"name\": str,\n  \"img\": str\n})).min(0);\n\nconst _navSeq = array().of(obj({\n  \"movieid\": num,\n  \"ratingstyle\": str\n})).min(0);\n\nconst _reviewSeq = array().of(num).min(0);\n\nconst _ratedMovie = array().of(obj({\n  \"name\": str,\n  \"img\": str,\n  \"commonRate\": num,\n  \"color-circle\": num,\n  \"color-star\": num,\n  \"color-emoji\": num,\n  \"circle\": num,\n  \"emoji\": num\n})).min(0);\n\nconst _reviewedMovie = array().of(obj({\n  \"name\": str,\n  \"img\": str,\n  \"commonRate\": num,\n  \"color-circle\": num,\n  \"color-star\": num,\n  \"color-emoji\": num,\n  \"circle\": num,\n  \"emoji\": num,\n  \"chosenRatings\": array().of(num).min(1)\n})).min(0);\n\nconst _reviewOverall = num;\n\nconst sadHappy1Schema = obj({\n  personality: _personality\n});\n\nconst commonSchema = obj({\n  personality: _personality,\n  selectedMovies: _movie,\n  navSequence: _navSeq,\n  sadhappy1: str\n});\n\nconst rateSchema = commonSchema;\n\nconst sadHappy2Schema = commonSchema;\n\nconst reviewoverallSchema = obj({\n  personality: _personality,\n  selectedMovies: _ratedMovie,\n  sadhappy1: str,\n  sadhappy2: str\n});\n\nconst sadHappy3Schema = reviewoverallSchema;\n\nconst reviewEachSchema = obj({\n  personality: _personality,\n  selectedMovies: _ratedMovie,\n  reviewOverall: _reviewOverall,\n  reviewSequence : _reviewSeq,\n  sadhappy1: str,\n  sadhappy2: str,\n  sadhappy3: str\n});\n\nconst explainReviewSchema = reviewEachSchema;\n\nconst emailSchema = obj({\n  personality: _personality,\n  selectedMovies: _reviewedMovie,\n  reviewOverall: _reviewOverall,\n  sadhappy1: str,\n  sadhappy2: str,\n  sadhappy3: str\n});\n\nconst askEmailSchema = emailSchema;\n\nconst endSchema = emailSchema;\n\nconst schemas = {\n  \"/sadhappy1\": sadHappy1Schema,\n  \"/sadhappy2\": sadHappy2Schema,\n  \"/sadhappy3\": sadHappy3Schema,\n  \"/common\": commonSchema,\n  \"/rate/:movieid/:ratingstyle\": rateSchema,\n  \"/reviewoverall\": reviewoverallSchema,\n  \"/explainreview\": explainReviewSchema,\n  \"/review/:movieid\": reviewEachSchema,\n  \"/askemail\": askEmailSchema,\n  \"/email\": emailSchema,\n  \"/end\": endSchema\n};\n\nfunction RestrictedRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render = {\n        props => {\n          const schema = schemas[props.match.path];\n          if (!schema) {\n            return <Redirect\n              to={{\n                pathname: \"/error\",\n                state: { from: props.location }\n              }}\n            />\n          }\n\n          let transition;\n          try {\n            schema.validateSync(survey.get());\n\n            switch(props.match.path) {\n              case \"/sadhappy1\":\n                props.saveAs = \"sadhappy1\";\n                props.nextRoute = \"/common\";\n                break;\n              case \"/sadhappy2\":\n                props.saveAs = \"sadhappy2\";\n                const { movieid, ratingstyle } = survey.get().navSequence.pop();\n                props.nextRoute = `/rate/${movieid}/${ratingstyle}`;\n                break;\n              case \"/sadhappy3\":\n                props.saveAs = \"sadhappy3\";\n                props.nextRoute = \"/reviewoverall\";\n                break;\n              default: break;\n            }\n\n            transition = <Component {...props} />\n          } catch(err) {\n            alert(err);\n            transition = <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: props.location }\n              }}\n            />\n          }\n\n          return transition;\n        }\n      }\n    />\n  );\n}\n\n// <PrivateRoute exact path=\"/orders/include\" component={IncludePage} />\n// Followed https://github.com/gothinkster/react-mobx-realworld-example-app\n// To adopt mobx faster later on\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Beforeunload onBeforeunload={() => \"Survey data can be loss, are you sure?\"}>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={PersonalityPage} />\n            <Route exact path=\"/error\" component={ErrorPage} />\n            <RestrictedRoute exact path=\"/sadhappy1\" component={SadHappyPage} />\n            <RestrictedRoute exact path=\"/sadhappy2\" component={SadHappyPage} />\n            <RestrictedRoute exact path=\"/sadhappy3\" component={SadHappyPage} />\n            <RestrictedRoute exact path=\"/common\" component={CommonRatePage} />\n            <RestrictedRoute exact path=\"/reviewoverall\" component={ReviewoverallPage} />\n            <RestrictedRoute exact path=\"/explainreview\" component={ExplainReviewPage} />\n            <RestrictedRoute exact path=\"/askemail\" component={AskEmailPage} />\n            <RestrictedRoute exact path=\"/email\" component={EmailPage} />\n            <RestrictedRoute exact path=\"/end\" component={EndPage} />\n            <RestrictedRoute exact path=\"/rate/:movieid/:ratingstyle\" component={RatePage} />\n            <RestrictedRoute exact path=\"/review/:movieid\" component={ReviewPage} />\n          </Switch>\n        </HashRouter>\n      </Beforeunload>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}